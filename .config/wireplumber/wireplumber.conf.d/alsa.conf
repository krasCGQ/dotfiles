#
# api.alsa.period-size property which sets at which interval a PCM interrupt will be caught must
# be calculated based on target sample rate, bit depth, and on whether batch mode is enabled or not.
#
# See https://www.alsa-project.org/main/index.php/FramesPeriods for complete information.
#

# Use ALSA-Card-Profile to manage devices by default
monitor.alsa.properties = {
    alsa.use-acp = true
}

# Default configuration for all available cards
monitor.alsa.rules = [
    {
        matches = [
            {
                device.name = "~alsa_card.*"
            }
        ]

        actions = {
            update-props = {
                api.acp.auto-port = false
                api.acp.auto-profile = false
            }
        }
    }
    {
        matches = [
            {
                node.name = "~alsa_input.*"
            }
            {
                node.name = "~alsa_output.*"
            }
        ]

        actions = {
            update-props = {
                channelmix.normalize = true
                resample.quality = 15
            }
        }
    }
]

# Realtek ALC897 on MSI MAG B760M Mortar Max WiFi
monitor.alsa.rules = [
    {
        matches = [
            {
                node.name = "~alsa_input.pci-0000_00_1f.3.*"
                alsa.mixer_name = "Realtek ALC897"
            }
            {
                node.name = "~alsa_output.pci-0000_00_1f.3.*"
                alsa.mixer_name = "Realtek ALC897"
            }
        ]

        actions = {
            update-props = {
                audio.channels = 2
                audio.format = "S24_3LE"
                audio.rate = 192000

                api.alsa.period-size = 38400  # interrupt every ~100 ms
            }
        }
    }
    {
        matches = [
            {
                node.name = "~alsa_input.pci-0000_00_1f.3.analog-*"
                alsa.mixer_name = "Realtek ALC897"
                alsa.id = "ALC897 Analog"
            }
            {
                node.name = "~alsa_output.pci-0000_00_1f.3.analog-*"
                alsa.mixer_name = "Realtek ALC897"
                alsa.id = "ALC897 Analog"
            }
        ]

        actions = {
            update-props = {
                # Apply correct supported sample rates as obtained from procfs
                audio.allowed-rates = "44100,48000,96000,192000"
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_output.pci-0000_00_1f.3.iec958-stereo"
                alsa.mixer_name = "Realtek ALC897"
                alsa.id = "ALC897 Digital"
            }
        ]

        actions = {
            update-props = {
                # Apply correct supported sample rates as obtained from procfs
                audio.allowed-rates = "32000,44100,48000,88200,96000,176400,192000"
            }
        }
    }
]

# Connexant CX20751/2 on Lenovo V330-14IKP
monitor.alsa.rules = [
    {
        matches = [
            {
                node.name = "~alsa_input.pci-0000_00_1f.3.*"
                alsa.id = "CX20751/2 Analog"
            }
            {
                node.name = "~alsa_output.pci-0000_00_1f.3.*"
                alsa.id = "CX20751/2 Analog"
            }
        ]

        actions = {
            update-props = {
                # Apply correct supported sample rates as obtained from procfs
                audio.allowed-rates = "44100,48000"

                audio.channels = 2
                audio.format = "S24_3LE"
                audio.rate = 48000

                api.alsa.period-size = 9600  # interrupt every ~100 ms
            }
        }
    }
]

# JCally JM6, based on Connexant CX31993
monitor.alsa.rules = [
    {
        matches = [
            {
                device.name = "alsa_card.usb-Synaptics_CX31993_HIFI_AUDIO-00"
                device.nick = "CX31993 HIFI AUDIO"
            }
        ]

        actions = {
            update-props = {
                device.nick = "JCally JM6"
            }
        }
    }
    {
        matches = [
            {
                node.name = "*.usb-Synaptics_CX31993_HIFI_AUDIO-00.*"
                node.nick = "CX31993 HIFI AUDIO"
            }
        ]

        actions = {
            update-props = {
                node.nick = "JCally JM6"
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_input.usb-Synaptics_CX31993_HIFI_AUDIO-00.mono-fallback"
                node.description = "CX31993 HIFI AUDIO Mono"
            }
        ]

        actions = {
            update-props = {
                # Apply correct supported sample rates as obtained from procfs
                audio.allowed-rates = "8000,16000,32000,44100,48000,96000"

                audio.channels = 1
                audio.format = "S24_3LE"
                audio.position = "FL"  # mapped like this by default
                audio.rate = 96000
            }
        }
    }
    {
        matches = [
            {
                node.name = "~alsa_output.usb-Synaptics_CX31993_HIFI_AUDIO-00.*"
                node.description = "~CX31993 HIFI AUDIO *"
            }
        ]

        actions = {
            update-props = {
                # Apply correct supported sample rates as obtained from procfs
                audio.allowed-rates = "8000,16000,32000,44100,48000,96000,192000,384000"

                audio.channels = 2
                audio.format = "S32_LE"
                audio.rate = 192000

                api.alsa.disable-batch = true
                api.alsa.period-size = 15360  # interrupt every ~80 ms
            }
        }
    }
]

# Edifier G2000 Gaming Speaker
monitor.alsa.rules = [
    {
        matches = [
            {
                node.name = "~alsa_output.usb-EDIFIER_EDIFIER_G2000_EDI00000X07-01.*"
                node.nick = "EDIFIER G2000"
            }
        ]

        actions = {
            update-props = {
                audio.allowed-rates = "48000"

                audio.channels = 2
                audio.format = "S16_LE"
                audio.rate = 48000
            }
        }
    }
]
